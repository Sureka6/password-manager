from cryptography.fernet import Fernet
import os
import pickle

# Generate a key and save it to a file (if it doesn't exist)
def generate_key():
    key = Fernet.generate_key()
    with open("secret.key", "wb") as key_file:
        key_file.write(key)

# Load the key from the file
def load_key():
    return open("secret.key", "rb").read()

# Save password to a file (encrypted)
def save_password(website, username, password, key):
    cipher_suite = Fernet(key)
    encrypted_password = cipher_suite.encrypt(password.encode())

    # Store in a dictionary and save to a file
    password_data = load_data()
    password_data[website] = {"username": username, "password": encrypted_password}
    save_data(password_data)

# Load password data from file (if exists)
def load_data():
    if os.path.exists("passwords.dat"):
        with open("passwords.dat", "rb") as file:
            return pickle.load(file)
    else:
        return {}

# Save password data to file
def save_data(data):
    with open("passwords.dat", "wb") as file:
        pickle.dump(data, file)

# Retrieve password for a website (decrypted)
def get_password(website, key):
    password_data = load_data()

    if website in password_data:
        cipher_suite = Fernet(key)
        decrypted_password = cipher_suite.decrypt(password_data[website]["password"]).decode()
        return password_data[website]["username"], decrypted_password
    else:
        print("No password stored for this website.")
        return None, None

# Main function for user interaction
def main():
    # Check if key exists, otherwise generate one
    if not os.path.exists("secret.key"):
        generate_key()

    key = load_key()

    while True:
        print("\nPassword Manager")
        print("1. Save Password")
        print("2. Get Password")
        print("3. Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            website = input("Enter the website: ")
            username = input("Enter the username: ")
            password = input("Enter the password: ")
            save_password(website, username, password, key)
            print(f"Password for {website} saved successfully!")

        elif choice == "2":
            website = input("Enter the website to retrieve password: ")
            username, password = get_password(website, key)
            if username and password:
                print(f"Website: {website}")
                print(f"Username: {username}")
                print(f"Password: {password}")
        
        elif choice == "3":
            print("Exiting...")
            break

        else:
            print("Invalid option. Please choose again.")

if __name__ == "__main__":
    main()

outputs


Password Manager
1. Save Password
2. Get Password
3. Exit
Choose an option: 1
Enter the website: google.com
Enter the username: user123
Enter the password: MySecurePassword123
Password for google.com saved successfully!
This will encrypt the password "MySecurePassword123" and save it securely.

2. Retrieving a Password
User input:


Copy code
Password Manager
1. Save Password
2. Get Password
3. Exit
Choose an option: 2
Enter the website to retrieve password: google.com
Website: google.com
Username: user123
Password: MySecurePassword123
This retrieves the encrypted password, decrypts it using the secret key, and displays the stored credentials.

3. Exiting the Program
User input:

markdown
Copy code
Password Manager
1. Save Password
2. Get Password
3. Exit
Choose an option: 3
Exiting...
This closes the program.
